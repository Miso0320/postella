<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mycompany.postella.dao.OrdersDao">
	
	<!-- 주문자 이름 가져오기 -->
	<select id="selectUsName" parameterType="int" resultType="String">
		select users.us_name
		from orders, users
		where orders.us_no = users.us_no
		and od_no = #{od_no}
	</select>
	
	<!-- 주문목록 가져오기 -->
 	<select id="selectOrderList" parameterType="java.util.Map" resultType="Orders">
		SELECT od_date, od_status, prd_name, od_detail_qty, od_detail_price, prd_no, od_no, od_detail_no
		FROM (
			SELECT
				ROWNUM AS rnum,
			    od_date,
			    od_status,
			    prd_name,
			    od_detail_qty,
			    od_detail_price,
			    prd_no,
			    od_no,
			    od_detail_no
			FROM
			    (
				SELECT
	
				    od_date,
				    get_code_value('OR', od_status) as od_status,
				    prd_name,
				    od_detail_qty,
				    od_detail_price,
				    prd_no,
				    ord.od_no as od_no,
				    od_detail_no
				FROM
				         orders ord
				    JOIN (
				        SELECT
				            pr.prd_name,
				            od.od_no,
				            od.prd_no,
				            od.od_detail_qty,
				            od.od_detail_price,
				            od.od_detail_no
				        FROM
				                 order_detail od
				            JOIN product pr ON od.prd_no = pr.prd_no
				    ) prd ON ord.od_no = prd.od_no
				WHERE
				        us_no = ${us_no}
				        <if test='keyword != null and keyword != ""'>
				        	AND REGEXP_REPLACE(LOWER(REPLACE(prd_name,' ','')), '[[:punct:]]', '') LIKE '%'||REGEXP_REPLACE(LOWER(REPLACE(#{keyword},' ','')), '[[:punct:]]', '')||'%'
				        </if>
				        <if test='requestYear != null and requestYear != ""'>
				        	AND to_char(od_date, 'YYYY.MM.DD') BETWEEN #{startDate} and #{endDate}
				        </if>
				ORDER BY
		    			od_date DESC
		<![CDATA[		  
		    	)
		    	WHERE
		    		ROWNUM <= ${pager.endRowNo}
		    		)
	    	WHERE
			    rnum >= ${pager.startRowNo}
		]]>
	</select>
	
	<!-- 주문목록 전체개수 -->
	<select id="orderListCnt" parameterType="java.util.Map" resultType="int">
		SELECT
		    count(*)
		FROM
		    (
			SELECT
			    od_date,
			    get_code_value('OR', od_status) as od_status,
			    prd_name,
			    od_detail_qty,
			    od_detail_price,
			    prd_no,
			    ord.od_no as od_no,
			    od_detail_no
			FROM
			         orders ord
			    JOIN (
			        SELECT
			            pr.prd_name,
			            od.od_no,
			            od.prd_no,
			            od.od_detail_qty,
			            od.od_detail_price,
			            od.od_detail_no
			        FROM
			                 order_detail od
			            JOIN product pr ON od.prd_no = pr.prd_no
			    ) prd ON ord.od_no = prd.od_no
			WHERE
			        us_no = ${us_no}
			        <if test='keyword != null and keyword != ""'>
			        	AND REGEXP_REPLACE(LOWER(REPLACE(prd_name,' ','')), '[[:punct:]]', '') LIKE '%'||REGEXP_REPLACE(LOWER(REPLACE(#{keyword},' ','')), '[[:punct:]]', '')||'%'
			        </if>
			        <if test='requestYear != null and requestYear != ""'>
			        	AND to_char(od_date, 'YYYY.MM.DD') BETWEEN #{startDate} and #{endDate}
			        </if>   
	    	)
	</select>
	
	<!-- 주문내역 삭제 -->
	<delete id="deleteOrder" parameterType="int">
		delete from order_detail
		where od_detail_no = #{od_detail_no}
	</delete>
	
	<!-- 주문 내역 추가하기 -->
	<insert id="insertOrder" parameterType="Orders">
		insert into orders (od_no, us_no, cp_no, od_date, od_status, od_door_pwd, od_item_cnt, od_arrived_date)
		VALUES (od_no_seq.nextval, #{us_no}, #{cp_no, jdbcType=INTEGER}, #{od_date}, #{od_status}, #{od_door_pwd, jdbcType=VARCHAR}, #{od_item_cnt}, #{od_arrived_date, jdbcType=DATE})
	</insert>
	
</mapper>